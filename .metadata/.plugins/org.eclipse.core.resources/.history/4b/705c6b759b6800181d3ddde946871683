/*
 * SmartArose.cpp
 *
 *  Created on: 30 mai 2018
 *      Author: boza
 */
#define EXISTS_WATER 0.0
#define HUMID_SOIL 500.0  // idk what this is
#define TEMPERATURE_LIMIT 5 // degrees celcius
#define TIME_WAIT_BUTTON 10 // seconds
#define BTN_PUSHED 1
#define HUMIDITY_LIMIT 20 // not defined yet
#define WET_PERIOD 4
#include "SmartArose.h"

SmartArose::SmartArose() { // mention the pins to wich are connected
	//can be changed in the SmartArose.h !

	 wT=WaterTank(valvePin,waterLevelPin);
	 plant=Plant(waterExistPin,tempPin,humidityPin);
	 btn= Button(buttonPin);
	 buzz=Buzzer(buzzerPin);
	 led = Led(ledPin);
}


//test the buzzer and the humidity


void SmartArose::Run(){

	while(1){

			btn.WaitCommand(TIME_WAIT_BUTTON);
			if( btn.GetStatus() ==BTN_PUSHED && btnRestrictor==0){
				    printf("\n button is pushed and we are weting\n");
					wT.Arose(2);
					btnRestrictor=WET_PERIOD;
					continue;
			}else{

			    printf("\n button was pushed but we recently wet \n");
			}



		if(wT.GetWaterLevel()==EXISTS_WATER) { // if there is water in the tank

		    printf("\n there is water in the tank\n");

			if(plant.GetTemp()>=TEMPERATURE_LIMIT){ // temperature is good


			    printf("\n temperature is good \n");

				// modify or add actual water level for the plant here
				if (plant.GetHumidity()>=HUMID_SOIL){

				    printf("\n humidity is good \n\n No need to arose ! \n");
				    btnRestrictor--; // if we don't need to wet then we decrease the time
					break;
				}else{

				    printf("\n humidity %d is not good \n",plant.GetHumidity());
					wT.Arose(3);
					btnRestrictor=WET_PERIOD;
				    printf("\n We arosed \n");
				}

			}else{			//case it is too cold

			printf("\n temperature is low\n");
			while(plant.GetTemp()<TEMPERATURE_LIMIT){
				buzz.Run(1);
				led.Run(1);
				sleep(2);
			}
			}
		}else{
			btnRestrictor=0;
				printf("\n there is no water in the tank water\n");
			while(wT.GetWaterLevel()!=EXISTS_WATER){  // we signal all the time that there is no water

				buzz.Run(1); // we signall
				led.Run(1);
				sleep(3);
			}

		}


	}
}

SmartArose::~SmartArose() {
	// TODO Auto-generated destructor stub
}

